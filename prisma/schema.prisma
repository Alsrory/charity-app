generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  MEMBER  //عضو عادي 
  ADMIN   //مدير
}

enum MemberType {
  NON_MEMBER  // غير منتسب
  AFFILIATED  // منتسب
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

enum PaymentMethod {
  STRIPE
  BANK_TRANSFER
  CASH
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String?         @unique
  phoneNumber   String?         @unique
  password      String?
  role          UserRole       @default(MEMBER)
  memberType    MemberType     @default(NON_MEMBER)
  address       String?
  age           Int?
  affiliation   String?        // لمن يريد كتابة سبب الانتساب أو اسم الجهة
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  payments      Payment[]
  addpayments   Payment[]@relation("adminAdded")
  notifications Notification[]
}

model Payment {
  id            String         @id @default(uuid())
  amount        Float           @default(0)
  status        PaymentStatus?  @default(PENDING)
  method        PaymentMethod?
  month         Int            // 1 - 12
  year          Int            // YYYY
  receiptUrl    String?
  userId        String
  addByAdminID   String
  receiptNumber String?       @default("000000")
  user          User           @relation(fields: [userId], references: [id])
  addByAdmin    User          @relation("adminAdded",fields: [addByAdminID],references: [id])
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String
  status      String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Initiative {
  id          String   @id @default(uuid())
  title       String
  description String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model News {
  id          String   @id @default(uuid())
  title       String
  content     String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum NotificationType {
  GENERAL
  REMINDER
}

model Notification {
  id        String           @id @default(uuid())
  message   String
  type      NotificationType @default(GENERAL)
  userId    String?
  user      User?            @relation(fields: [userId], references: [id])
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}
